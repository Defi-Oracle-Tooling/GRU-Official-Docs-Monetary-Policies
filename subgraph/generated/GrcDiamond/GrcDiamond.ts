// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BondBuyback extends ethereum.Event {
  get params(): BondBuyback__Params {
    return new BondBuyback__Params(this);
  }
}

export class BondBuyback__Params {
  _event: BondBuyback;

  constructor(event: BondBuyback) {
    this._event = event;
  }

  get series(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get principalClosed(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BondIssued extends ethereum.Event {
  get params(): BondIssued__Params {
    return new BondIssued__Params(this);
  }
}

export class BondIssued__Params {
  _event: BondIssued;

  constructor(event: BondIssued) {
    this._event = event;
  }

  get series(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get notional(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CouponsAccrued extends ethereum.Event {
  get params(): CouponsAccrued__Params {
    return new CouponsAccrued__Params(this);
  }
}

export class CouponsAccrued__Params {
  _event: CouponsAccrued;

  constructor(event: CouponsAccrued) {
    this._event = event;
  }

  get series(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CutExecuted extends ethereum.Event {
  get params(): CutExecuted__Params {
    return new CutExecuted__Params(this);
  }
}

export class CutExecuted__Params {
  _event: CutExecuted;

  constructor(event: CutExecuted) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class CutProposed extends ethereum.Event {
  get params(): CutProposed__Params {
    return new CutProposed__Params(this);
  }
}

export class CutProposed__Params {
  _event: CutProposed;

  constructor(event: CutProposed) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get proposer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get init(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get initData(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class CutQueued extends ethereum.Event {
  get params(): CutQueued__Params {
    return new CutQueued__Params(this);
  }
}

export class CutQueued__Params {
  _event: CutQueued;

  constructor(event: CutQueued) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get eta(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DashboardSnapshot extends ethereum.Event {
  get params(): DashboardSnapshot__Params {
    return new DashboardSnapshot__Params(this);
  }
}

export class DashboardSnapshot__Params {
  _event: DashboardSnapshot;

  constructor(event: DashboardSnapshot) {
    this._event = event;
  }

  get dashboardHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get globalVersion(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get liCRI(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class DiamondCut extends ethereum.Event {
  get params(): DiamondCut__Params {
    return new DiamondCut__Params(this);
  }
}

export class DiamondCut__Params {
  _event: DiamondCut;

  constructor(event: DiamondCut) {
    this._event = event;
  }

  get _cut(): Array<DiamondCut_cutStruct> {
    return this._event.parameters[0].value.toTupleArray<DiamondCut_cutStruct>();
  }

  get _init(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class DiamondCut_cutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class EmergencyBrake extends ethereum.Event {
  get params(): EmergencyBrake__Params {
    return new EmergencyBrake__Params(this);
  }
}

export class EmergencyBrake__Params {
  _event: EmergencyBrake;

  constructor(event: EmergencyBrake) {
    this._event = event;
  }

  get selector(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get paused(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class FeeUpdated extends ethereum.Event {
  get params(): FeeUpdated__Params {
    return new FeeUpdated__Params(this);
  }
}

export class FeeUpdated__Params {
  _event: FeeUpdated;

  constructor(event: FeeUpdated) {
    this._event = event;
  }

  get oldFeeBps(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newFeeBps(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FunctionPaused extends ethereum.Event {
  get params(): FunctionPaused__Params {
    return new FunctionPaused__Params(this);
  }
}

export class FunctionPaused__Params {
  _event: FunctionPaused;

  constructor(event: FunctionPaused) {
    this._event = event;
  }

  get selector(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get paused(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class IndexWeightsUpdated extends ethereum.Event {
  get params(): IndexWeightsUpdated__Params {
    return new IndexWeightsUpdated__Params(this);
  }
}

export class IndexWeightsUpdated__Params {
  _event: IndexWeightsUpdated;

  constructor(event: IndexWeightsUpdated) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get version(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoRPosted extends ethereum.Event {
  get params(): PoRPosted__Params {
    return new PoRPosted__Params(this);
  }
}

export class PoRPosted__Params {
  _event: PoRPosted;

  constructor(event: PoRPosted) {
    this._event = event;
  }

  get period(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get root(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get ipfsRef(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class PoRSealed extends ethereum.Event {
  get params(): PoRSealed__Params {
    return new PoRSealed__Params(this);
  }
}

export class PoRSealed__Params {
  _event: PoRSealed;

  constructor(event: PoRSealed) {
    this._event = event;
  }

  get period(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RateSet extends ethereum.Event {
  get params(): RateSet__Params {
    return new RateSet__Params(this);
  }
}

export class RateSet__Params {
  _event: RateSet;

  constructor(event: RateSet) {
    this._event = event;
  }

  get fromAsset(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get toAsset(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get rate(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Redeemed extends ethereum.Event {
  get params(): Redeemed__Params {
    return new Redeemed__Params(this);
  }
}

export class Redeemed__Params {
  _event: Redeemed;

  constructor(event: Redeemed) {
    this._event = event;
  }

  get fromAsset(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get toAsset(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get inputAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get outputAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ScalarUpdated extends ethereum.Event {
  get params(): ScalarUpdated__Params {
    return new ScalarUpdated__Params(this);
  }
}

export class ScalarUpdated__Params {
  _event: ScalarUpdated;

  constructor(event: ScalarUpdated) {
    this._event = event;
  }

  get oldScalar(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newScalar(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Triangulated extends ethereum.Event {
  get params(): Triangulated__Params {
    return new Triangulated__Params(this);
  }
}

export class Triangulated__Params {
  _event: Triangulated;

  constructor(event: Triangulated) {
    this._event = event;
  }

  get fromAsset(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get toAsset(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get inputAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get outputAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class GrcDiamond__facetsResult {
  value0: Array<Address>;
  value1: Array<Array<Bytes>>;

  constructor(value0: Array<Address>, value1: Array<Array<Bytes>>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytesMatrix(this.value1));
    return map;
  }

  getFacetAddresses(): Array<Address> {
    return this.value0;
  }

  getSelectors(): Array<Array<Bytes>> {
    return this.value1;
  }
}

export class GrcDiamond__getIndexWeightsResult {
  value0: BigInt;
  value1: Array<Bytes>;
  value2: Array<BigInt>;
  value3: Bytes;

  constructor(
    value0: BigInt,
    value1: Array<Bytes>,
    value2: Array<BigInt>,
    value3: Bytes
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytesArray(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigIntArray(this.value2));
    map.set("value3", ethereum.Value.fromFixedBytes(this.value3));
    return map;
  }

  getVer(): BigInt {
    return this.value0;
  }

  getKeys(): Array<Bytes> {
    return this.value1;
  }

  getWeights(): Array<BigInt> {
    return this.value2;
  }

  getDashboardHash(): Bytes {
    return this.value3;
  }
}

export class GrcDiamond__getPoRResult {
  value0: Bytes;
  value1: string;

  constructor(value0: Bytes, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }

  getMerkleRoot(): Bytes {
    return this.value0;
  }

  getIpfs(): string {
    return this.value1;
  }
}

export class GrcDiamond__governanceParamsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getTimelockSeconds(): BigInt {
    return this.value0;
  }

  getQuorumBps(): BigInt {
    return this.value1;
  }
}

export class GrcDiamond extends ethereum.SmartContract {
  static bind(address: Address): GrcDiamond {
    return new GrcDiamond("GrcDiamond", address);
  }

  facetAddress(selector: Bytes): Address {
    let result = super.call("facetAddress", "facetAddress(bytes4):(address)", [
      ethereum.Value.fromFixedBytes(selector)
    ]);

    return result[0].toAddress();
  }

  try_facetAddress(selector: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "facetAddress",
      "facetAddress(bytes4):(address)",
      [ethereum.Value.fromFixedBytes(selector)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  facetAddresses(): Array<Address> {
    let result = super.call(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_facetAddresses(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  facetFunctionSelectors(facet: Address): Array<Bytes> {
    let result = super.call(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(facet)]
    );

    return result[0].toBytesArray();
  }

  try_facetFunctionSelectors(
    facet: Address
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(facet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  facets(): GrcDiamond__facetsResult {
    let result = super.call("facets", "facets():(address[],bytes4[][])", []);

    return new GrcDiamond__facetsResult(
      result[0].toAddressArray(),
      result[1].toBytesMatrix()
    );
  }

  try_facets(): ethereum.CallResult<GrcDiamond__facetsResult> {
    let result = super.tryCall("facets", "facets():(address[],bytes4[][])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GrcDiamond__facetsResult(
        value[0].toAddressArray(),
        value[1].toBytesMatrix()
      )
    );
  }

  getIndexWeights(indexId: Bytes): GrcDiamond__getIndexWeightsResult {
    let result = super.call(
      "getIndexWeights",
      "getIndexWeights(bytes32):(uint64,bytes32[],uint256[],bytes32)",
      [ethereum.Value.fromFixedBytes(indexId)]
    );

    return new GrcDiamond__getIndexWeightsResult(
      result[0].toBigInt(),
      result[1].toBytesArray(),
      result[2].toBigIntArray(),
      result[3].toBytes()
    );
  }

  try_getIndexWeights(
    indexId: Bytes
  ): ethereum.CallResult<GrcDiamond__getIndexWeightsResult> {
    let result = super.tryCall(
      "getIndexWeights",
      "getIndexWeights(bytes32):(uint64,bytes32[],uint256[],bytes32)",
      [ethereum.Value.fromFixedBytes(indexId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GrcDiamond__getIndexWeightsResult(
        value[0].toBigInt(),
        value[1].toBytesArray(),
        value[2].toBigIntArray(),
        value[3].toBytes()
      )
    );
  }

  getPoR(period: BigInt): GrcDiamond__getPoRResult {
    let result = super.call("getPoR", "getPoR(uint64):(bytes32,string)", [
      ethereum.Value.fromUnsignedBigInt(period)
    ]);

    return new GrcDiamond__getPoRResult(
      result[0].toBytes(),
      result[1].toString()
    );
  }

  try_getPoR(period: BigInt): ethereum.CallResult<GrcDiamond__getPoRResult> {
    let result = super.tryCall("getPoR", "getPoR(uint64):(bytes32,string)", [
      ethereum.Value.fromUnsignedBigInt(period)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GrcDiamond__getPoRResult(value[0].toBytes(), value[1].toString())
    );
  }

  getScalarS(): BigInt {
    let result = super.call("getScalarS", "getScalarS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getScalarS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getScalarS", "getScalarS():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  governanceParams(): GrcDiamond__governanceParamsResult {
    let result = super.call(
      "governanceParams",
      "governanceParams():(uint256,uint256)",
      []
    );

    return new GrcDiamond__governanceParamsResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_governanceParams(): ethereum.CallResult<
    GrcDiamond__governanceParamsResult
  > {
    let result = super.tryCall(
      "governanceParams",
      "governanceParams():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GrcDiamond__governanceParamsResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  grcVersion(): string {
    let result = super.call("grcVersion", "grcVersion():(string)", []);

    return result[0].toString();
  }

  try_grcVersion(): ethereum.CallResult<string> {
    let result = super.tryCall("grcVersion", "grcVersion():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get owner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get version_(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DiamondCutCall extends ethereum.Call {
  get inputs(): DiamondCutCall__Inputs {
    return new DiamondCutCall__Inputs(this);
  }

  get outputs(): DiamondCutCall__Outputs {
    return new DiamondCutCall__Outputs(this);
  }
}

export class DiamondCutCall__Inputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }

  get _cut(): Array<DiamondCutCall_cutStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      DiamondCutCall_cutStruct
    >();
  }

  get _init(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class DiamondCutCall__Outputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }
}

export class DiamondCutCall_cutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
